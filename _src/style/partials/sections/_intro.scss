@use "sass:color";
@use "../mixins";
@use "../variables";

.intro {

	position: relative;
	padding: 3rem 0px;
	overflow: hidden;
	// color: $white;
	// background: $blue-to-white;
	text-align: center;
	overflow: hidden;

	&-logo {

		display: block;
		margin: 0px auto 1.5rem;
		@include mixins.sdcLogoDimensions(16rem);

		@include mixins.mq('desktop') {
			display: none;
		}

	}

	.wrapper {
		z-index: 10;
		position: static;
	}

	&-images {

		margin-bottom: 2rem;
		padding: 1rem;

		img {

			z-index: 1;
			position: relative;
			width: 1em;
			height: 1em;
			font-size: 5rem;
			font-size: 20vw;
			border: 0.125rem solid variables.$grey-lighter;
			border-radius: 0.0625em;
			object-fit: cover;
			box-shadow: 0px 0px 30px color.adjust(variables.$black, $alpha: -0.8);
			animation: {
				duration: 500ms;
				delay: 500ms;
				iteration-count: 1;
				fill-mode: forwards;
			}
			opacity: 0;
			will-change: opacity, transform;

			@include mixins.mq(variables.$screen-sm) {
				font-size: 8rem;
			}

			@include mixins.mq(variables.$screen-md) {
				font-size: 12rem;
			}

		}

		// picture:nth-child(1) img {
		img:nth-child(1) {
			animation: {
				name: fadeInUpImg1;
			}
		}

		// picture:nth-child(2) img {
		img:nth-child(2) {
			z-index: 0;
			width: 1.5em;
			border-color: transparent;
			animation: {
				name: fadeInUpImg2;
				delay: 0ms;
			}
		}

		// picture:nth-child(3) img {
		img:nth-child(3) {
			animation: {
				name: fadeInUpImg3;
				delay: 800ms;
			}
		}

	}

	a:not(.btn) {

		color: currentColor;
		transition: color variables.$transition-speed;

		&:hover {
			color: variables.$grey;
		}

	}

	.tagline {

		// color: $white;
		font-size: 1.5rem;
		line-height: 1.1;
		text-align: center;

		@include mixins.mq(variables.$screen-sm) {
			font-size: 2.5rem;
		}

	}

	.description {

		@include mixins.mq('desktop') {
			font-size: 1.25rem;
		}

	}

	.more-arrow-wrap {
		display: none;
	}

	.content {

		margin: 0px auto;
		padding: 0px;

		@include mixins.mq(variables.$screen-sm) {
			z-index: 1;
			position: absolute;
			top: 50%;
			left: 50%;
			transform: translate(-50%, -50%);
			padding: 0px 2rem;
			width: variables.$screen-sm - 4rem;
			max-width: 100%;
		}

		@media (min-width: variables.$screen-sm) and (max-width: 1023px) and (max-height: 750px) {

			.tagline {
				font-size: 1.75rem;
			}

			.intro-images img {
				font-size: 6rem;
			}

			.btn {
				padding: 0.5em 1.5em;
			}

		}

		@media (min-width: variables.$screen-sm) and (max-height: 750px) {

			.tagline {
				font-size: 2rem;
			}

			.intro-images img {
				font-size: 7rem;
			}

			.btn {
				padding: 0.5em 1.5em;
			}

		}

		@media (min-width: variables.$screen-sm) and (max-height: 600px) {

			.tagline {
				font-size: 1.75rem;
			}

			.intro-images img {
				font-size: 6rem;
			}

		}

	}

	@include mixins.mq(variables.$screen-sm) {

		height: 100vh;
		height: calc(var(--vh, 1vh) * 100);
		min-height: 550px;

		.has-banner & {
			height: calc(var(--vh, 1vh) * 100 - 3rem);
		}

		.tagline {
			font-size: 3rem;
		}

		.more-arrow-wrap  {

			opacity: 0;
			display: block;
			position: absolute;
			bottom: 1.5rem;
			left: 50%;
			transform: translate(-50%, 0px);
			animation: {
				name: fadeInUpMoreArrow;
				delay: variables.$animation-intro-extra-delay;
				duration: variables.$animation-fade-in-up-speed;
				timing-function: ease-out;
				fill-mode: forwards;
			}
			transition: color variables.$transition-speed;

			.more-arrow {

				color: variables.$grey-darker;

				&:hover {
					cursor: pointer;
					color: variables.$grey;
				}

			}

		}

	}

	@include mixins.mq('desktop') {

		.content {
			padding: 0px;
			width: 50rem;
		}

	}

}
