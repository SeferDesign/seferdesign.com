@use "mixins";
@use "variables";

body.nav-active {
	overflow: hidden;
	position: fixed;
	width: 100%;
	height: 100%;
}

.back {

	display: block;
	z-index: 1000;
	position: absolute;
	top: 1.375rem;
	left: 1.375rem;
	color: variables.$grey-lighter;
	transition: color variables.$transition-speed;

	&:hover {

		color: variables.$grey-darker;

		svg {
			fill: variables.$grey-darker;
		}

	}

	svg {
		display: block;
		width: 1em;
		height: 1.6em;
		font-size: 1rem;
		fill: variables.$grey-lighter;
		transition: fill variables.$transition-speed;
	}

}

.nav-toggle {

	z-index: 199999;
	position: fixed;
	top: 1rem;
	right: 1rem;
	padding: 0.5rem;
	width: 3.5rem;
	height: 2.5625rem;
	overflow: hidden;

	.has-banner & {
		display: none;
	}

	&:hover {

		cursor: pointer;

		span {
			background: variables.$grey-darker;
		}

	}

	.nav-active & {

		overflow: visible;
		background: none;

		.closed {
			display: none;
		}

		.open {

			display: block;
			position: absolute;
			top: 50%;
			left: 50%;
			transform: translate(-50%, -50%);
			color: variables.$white;
			font-size: 5rem;
			line-height: 0.5;
			font-weight: 500;
			transition: color variables.$transition-speed;

			&:hover {
				color: variables.$grey-darker;
			}

		}

	}

	.open {
		display: none;
	}

	.closed {

		position: relative;
		width: 100%;

		&:hover span {
			background: variables.$grey;
		}

		span {

			display: block;
			width: 100%;
			height: 0.1875rem;
			background: variables.$black;
			transition: background variables.$transition-speed;

			.page-home & {

				transform: translate(calc(100% + 0.5rem), 0px);
				will-change: transform;
				animation: {
					name: navToggleSlideIn;
					duration: variables.$animation-slide-in-right-speed;
					timing-function: ease-out;
					fill-mode: forwards;
				}

				@for $i from 1 through 3 {

					&:nth-child(#{$i}) {
						animation-delay: #{(variables.$animation-intro-extra-delay * 1.5) + (50 * ($i - 1))};
					}

					@media screen and (min-width: variables.$mobile-breakpoint) {
						&:nth-child(#{$i}) {
							animation-delay: #{variables.$animation-intro-extra-delay + (50 * ($i - 1))};
						}
					}

				}

			}

			.nav-has-toggled & {
				animation: none;
				transform: translate(0px, 0px);
			}

			+ span {
				margin-top: 0.5rem;
			}

		}

	}

	@include mixins.mq('desktop') {
		display: none;
	}

}

nav {

	display: none;
	position: fixed;
	z-index: 99999;
	top: 0px;
	right: 0px;
	bottom: 0px;
	left: 0px;
	background: variables.$black;
	text-align: center;
	font-size: 4vh;
	font-size: calc(var(--vh, 1vh) * 4);
	@include mixins.caps();

	.nav-active & {
		display: block;
	}

	@include mixins.mq('desktop') {

		z-index: 999;
		position: absolute;
		top: 0px;
		left: 50%;
		right: auto;
		bottom: auto;
		transform: translate(-50%, 0px);
		padding: 1rem 3rem;
		width: 100%;
		max-width: variables.$screen-xl;
		display: block;
		background: none;
		font-size: 1.125rem;

		.has-banner & {
			top: 3rem;
		}

	}

	a {

		display: inline-block;
		color: variables.$white;
		font-weight: 700;
		text-decoration: none;

		@include mixins.mq('desktop') {
			color: variables.$grey-dark;
		}

		&:hover {

			color: variables.$grey;
			transform: translate(0px, -0.0625em);

			@include mixins.mq('desktop') {
				color: variables.$black;
				transform: none;
			}

		}

		&.btn-outline {

			color: variables.$white;
			padding: 0.65em 1em;

			@include mixins.mq('desktop') {
				color: variables.$grey-darker;
			}

			&:hover {
				color: variables.$white;
				border-color: variables.$grey-darker;
			}

			&:active {
				color: variables.$white;
				border-color: variables.$black;
				background: variables.$black;
			}

		}

	}

	ul {

		li {

			&:not(.li-logo) {

				@include mixins.mq('desktop') {
					font-size: 1rem;
				}

			}

		}


	}

	.logo {

		display: block;
		margin: 0px auto;
		@include mixins.sdcLogoDimensions(7em);

		@include mixins.mq('desktop') {
			@include mixins.sdcLogoDimensions(9em);
		}

		@include mixins.mq(variables.$screen-lg) {
			@include mixins.sdcLogoDimensions(11em);
		}

	}

	ul {

		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		width: 95%;
		list-style-type: none;
		margin: 0px;
		padding: 0px;

		@include mixins.mq('desktop') {
			display: flex;
			flex-wrap: wrap;
			justify-content: flex-end;
			align-items: center;
			position: static;
			transform: none;
			width: 100%;
		}

		li {

			@include mixins.mq('desktop') {

				display: inline-block;
				vertical-align: middle;

				&:nth-child(1) {
					margin-right: auto;
				}

			}

			+ li {

				margin-top: 2.5em;

				@include mixins.mq('desktop') {
					margin: 0px 0px 0px 2rem;
				}

			}

		}

	}

}
