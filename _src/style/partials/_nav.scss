@use "sass:math";
@use "mixins";
@use "variables";

nav {

	display: flex;
	flex-flow: row wrap;
	justify-content: flex-start;
	align-items: center;
	gap: 0.5rem;
	padding: var(--site-gap);
	width: var(--nav-width);
	background: var(--color-background);
	font-size: 1rem;
	font-weight: 500;

	@include mixins.mq('desktop') {
		position: fixed;
		top: 0px;
		left: 0px;
		flex-direction: column;
		align-items: flex-start;
		padding-right: 0px;
		// height: calc(100 * var(--vh));
		height: 100%;
		min-height: var(--site-min-height);
		font-size: 1.5rem;
	}

	@include mixins.mq(variables.$screen-md) {
		font-size: 2rem;
	}

	@include mixins.mq(variables.$wide-breakpoint) {
		left: 50%;
		transform: translate(calc(-1 * #{variables.$wide-breakpoint} / 2), 0px);
	}

	.logo {

		font-size: 1rem;

		@include mixins.mq('desktop') {
			font-size: 1em;
		}

	}


	a {
		color: currentColor;
		text-decoration: none;
	}

	.main-menu {

		z-index: 999;
		position: fixed;
		top: 4rem;
		right: 0px;
		height: calc(100 * var(--vh));
		transform: translate(100%, 0px);
		flex-basis:	100%;
		display: flex;
		flex-flow: row wrap;
		justify-content: center;
		align-content: center;
		align-items: center;
		gap: 0.5rem;
		list-style-type: none;
		margin: 0px;
		padding: calc(var(--site-gap) * 2);
		padding-top: 0px;
		width: 100%;
		background: var(--color-background);
		font-size: 1.75rem;
		transition: transform var(--transition-speed);

		.nav-expanded & {
			transform: translate(0px, 0px);
		}

		@include mixins.mq('desktop') {
			position: static;
			flex-basis: auto;
			transform: none;
			display: flex;
			margin-top: auto;
			padding: 0px;
			height: auto;
			background: transparent;
			font-size: 1em;
		}

		li {

			flex-basis: 100%;

			a {

				position: relative;

				&:before {
					content: '';
					user-select: none;
					pointer-events: none;
					position: absolute;
					top: 50%;
					left: -1.75em;
					transform: translate(-50%, -50%);
					font-size: 0.25em;
					width: 1em;
					height: 1em;
					border-radius: 50%;
					background: transparent;
					transition: background var(--transition-speed);
					will-change: background;
				}

			}

			&[aria-current="page"] a:before {
				background: var(--color-grey);
			}

			&:not([aria-current="page"]) a:hover:before {
				background: var(--color-grey-light);
			}

		}

	}

	.nav-main-toggle {

		--toggle-width: 1.75rem;
		--toggle-height: 1rem;
		--toggle-inner-height: 0.15rem;

		margin-left: auto;
		display: block;
		z-index: 12;
		width: var(--toggle-width);
		height: var(--toggle-height);
		transition: {
			property: opacity, filter;
			duration: 150ms;
			timing-function: linear;
		}

		&:hover {
			opacity: 0.7;
			cursor: pointer;
		}

		@include mixins.mq('desktop') {
			display: none;
		}

		.nav-expanded & {

			.nav-main-toggle-inner {

				top: calc(50% - var(--toggle-inner-height) * 0.4);
				transform: rotate(45deg);
				transition: {
					delay: 120ms;
					timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
				}

				// &,
				// &:before,
				// &:after {
				// 	background-color: $white;
				// }

				&:before {
					top: 0px;
					opacity: 0;
					transition: top 75ms ease, opacity 75ms 120ms ease;
				}

				&:after {
					bottom: 0px;
					transform: rotate(-90deg);
					transition: bottom 75ms ease, transform 75ms 120ms cubic-bezier(0.215, 0.61, 0.355, 1);
				}

			}

		}

		&-box {
			display: inline-block;
			position: relative;
			width: var(--toggle-width);
			height: var(--toggle-height);
		}

		&-inner {

			display: block;
			top: calc(50% - var(--toggle-inner-height) * 1.5);
			transform: translate(0px, -50%);
			transition: {
				duration: 75ms;
				timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
			}

			&,
			&:before,
			&:after {
				position: absolute;
				width: var(--toggle-width);
				height: var(--toggle-inner-height);
				background-color: currentColor;
				transition: {
					property: transform;
					duration: 150ms;
					timing-function: ease;
				}
			}

			&:before,
			&:after {
				content: '';
				display: block;
			}

			&:before {
				display: none;
			}

			&:before {
				top: calc(var(--toggle-height) * (-10 / 24));
				transition: top 75ms 120ms ease, opacity 75ms ease;
			}

			&:after {
				bottom: calc(var(--toggle-height) * -0.5);
				transition: bottom 75ms 120ms ease, transform 75ms cubic-bezier(0.55, 0.055, 0.675, 0.19);
			}

		}

	}

}
